{"ast":null,"code":"// import { createSlice } from \"@reduxjs/toolkit\";\n// const initialState = () => ({});\n// const slice = createSlice({\n//   name: \"notifications\",\n//   initialState: initialState(),\n//   reducers: {\n//     errorAdded: (state, action) => {\n//       state.error = action.payload.error;\n//       state.msg = action.payload.msg;\n//     },\n//     successAdded: (state, action) => {\n//       state.success = action.payload.success;\n//       state.msg = action.payload.msg;\n//     },\n//     articleRemoved: (state, action) => {\n//       state.removeArticle = true;\n//     },\n//     notificationsSuccessErrorCleared: (state, action) => {\n//       if (state.error) {\n//         state.error = null;\n//         state.msg = null;\n//       }\n//       if (state.success) {\n//         state.success = null;\n//         state.msg = null;\n//       }\n//     },\n//   },\n// });\n// const {\n//   errorAdded,\n//   successAdded,\n//   articleRemoved,\n//   notificationsSuccessErrorCleared,\n//   notificationsremoveArticleCleared,\n// } = slice.actions;\n// export const addError = (msg) => errorAdded({ error: true, msg });\n// export const addSuccess = (msg) => successAdded({ success: true, msg });\n// export const removeArticle = () => articleRemoved({});\n// export const clearSuccessErrorNotification = () =>\n//   notificationsSuccessErrorCleared();\n// export const clearRemoveArticleNotification = () =>\n//   notificationsremoveArticleCleared({});\n// export default slice.reducer;","map":{"version":3,"sources":["/Users/mohammedalmallahi/Development/Server/client/src/store/notifications.js"],"names":[],"mappings":"AAAA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AAEA","sourcesContent":["// import { createSlice } from \"@reduxjs/toolkit\";\n\n// const initialState = () => ({});\n\n// const slice = createSlice({\n//   name: \"notifications\",\n\n//   initialState: initialState(),\n\n//   reducers: {\n//     errorAdded: (state, action) => {\n//       state.error = action.payload.error;\n//       state.msg = action.payload.msg;\n//     },\n//     successAdded: (state, action) => {\n//       state.success = action.payload.success;\n//       state.msg = action.payload.msg;\n//     },\n//     articleRemoved: (state, action) => {\n//       state.removeArticle = true;\n//     },\n//     notificationsSuccessErrorCleared: (state, action) => {\n//       if (state.error) {\n//         state.error = null;\n//         state.msg = null;\n//       }\n//       if (state.success) {\n//         state.success = null;\n//         state.msg = null;\n//       }\n//     },\n//   },\n// });\n\n// const {\n//   errorAdded,\n//   successAdded,\n//   articleRemoved,\n//   notificationsSuccessErrorCleared,\n//   notificationsremoveArticleCleared,\n// } = slice.actions;\n\n// export const addError = (msg) => errorAdded({ error: true, msg });\n\n// export const addSuccess = (msg) => successAdded({ success: true, msg });\n\n// export const removeArticle = () => articleRemoved({});\n\n// export const clearSuccessErrorNotification = () =>\n//   notificationsSuccessErrorCleared();\n\n// export const clearRemoveArticleNotification = () =>\n//   notificationsremoveArticleCleared({});\n\n// export default slice.reducer;\n"]},"metadata":{},"sourceType":"module"}