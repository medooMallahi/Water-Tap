{"ast":null,"code":"var _jsxFileName = \"/Users/mohammedalmallahi/Development/Server/client/src/components/Driver/register/registerDriver.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useFormik } from \"formik\";\nimport styles from \"./RegisterDriver.module.css\";\nimport { TextField, Button, makeStyles } from \"@material-ui/core\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport { registerDriver } from \"../../../store/user\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  }\n}));\n\nconst RegisterDriver = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const notifications = useSelector(state => state.entities.notifications);\n  const formik = useFormik({\n    initialValues: {\n      email: \"xxss@gmail.com\",\n      name: \"mohammed Almallahi\",\n      password: \"0592413118\"\n    },\n    onSubmit: values => {\n      dispatch(registerDriver(values));\n    }\n  });\n  useEffect(() => {\n    if (notifications && notifications.success) {\n      props.history.push(\"/searchDriver\");\n    }\n  }, [notifications]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: styles.form,\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.Formtitle,\n        children: \"Sign UP NEW Driver\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          className: styles.TextField,\n          name: \"email\",\n          label: \"Enter your email\",\n          variant: \"outlined\",\n          inputProps: {\n            style: {\n              fontSize: 20\n            }\n          },\n          ...formik.getFieldProps(\"email\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          className: styles.TextField,\n          name: \"name\",\n          label: \"Enter your name\",\n          variant: \"outlined\",\n          inputProps: {\n            style: {\n              fontSize: 20\n            }\n          },\n          ...formik.getFieldProps(\"name\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          className: styles.TextField,\n          name: \"password\",\n          label: \"Enter your Password\",\n          variant: \"outlined\",\n          inputProps: {\n            style: {\n              fontSize: 20\n            }\n          },\n          ...formik.getFieldProps(\"password\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          size: \"large\",\n          className: classes.button,\n          startIcon: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 24\n          }, this),\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegisterDriver, \"SudM/bClKSCSQjxIS+7ctobMbvM=\", false, function () {\n  return [useDispatch, useStyles, useSelector, useFormik];\n});\n\n_c = RegisterDriver;\nexport default RegisterDriver;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterDriver\");","map":{"version":3,"sources":["/Users/mohammedalmallahi/Development/Server/client/src/components/Driver/register/registerDriver.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","useFormik","styles","TextField","Button","makeStyles","SaveIcon","registerDriver","useStyles","theme","button","margin","spacing","RegisterDriver","props","dispatch","classes","notifications","state","entities","formik","initialValues","email","name","password","onSubmit","values","success","history","push","container","form","handleSubmit","Formtitle","formGroup","style","fontSize","getFieldProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useFormik } from \"formik\";\n\nimport styles from \"./RegisterDriver.module.css\";\nimport { TextField, Button, makeStyles } from \"@material-ui/core\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport { registerDriver } from \"../../../store/user\";\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n\nconst RegisterDriver = (props) => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const notifications = useSelector((state) => state.entities.notifications);\n\n  const formik = useFormik({\n    initialValues: {\n      email: \"xxss@gmail.com\",\n      name: \"mohammed Almallahi\",\n      password: \"0592413118\",\n    },\n\n    onSubmit: (values) => {\n      dispatch(registerDriver(values));\n    },\n  });\n\n  useEffect(() => {\n    if (notifications && notifications.success) {\n      props.history.push(\"/searchDriver\");\n    }\n  }, [notifications]);\n\n  return (\n    <div className={styles.container}>\n      <form className={styles.form} onSubmit={formik.handleSubmit}>\n        <div className={styles.Formtitle}>Sign UP NEW Driver</div>\n        <div className={styles.formGroup}>\n          <TextField\n            className={styles.TextField}\n            name=\"email\"\n            label=\"Enter your email\"\n            variant=\"outlined\"\n            inputProps={{ style: { fontSize: 20 } }}\n            {...formik.getFieldProps(\"email\")}\n          />\n          <TextField\n            className={styles.TextField}\n            name=\"name\"\n            label=\"Enter your name\"\n            variant=\"outlined\"\n            inputProps={{ style: { fontSize: 20 } }}\n            {...formik.getFieldProps(\"name\")}\n          />\n          <TextField\n            className={styles.TextField}\n            name=\"password\"\n            label=\"Enter your Password\"\n            variant=\"outlined\"\n            inputProps={{ style: { fontSize: 20 } }}\n            {...formik.getFieldProps(\"password\")}\n          />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"large\"\n            className={classes.button}\n            startIcon={<SaveIcon />}\n          >\n            Save\n          </Button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default RegisterDriver;\n"]},"metadata":{},"sourceType":"module"}