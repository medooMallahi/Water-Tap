{"ast":null,"code":"var _jsxFileName = \"/Users/mohammedalmallahi/Development/Server/client/src/ hoc/mainLayout.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { showToast } from \"../ utils/tools\";\nimport { clearSuccessErrorNotification } from \"../store/notifications\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MainLayout = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const notifications = useSelector(state => state.entities.notifications);\n  useEffect(() => {\n    if (notifications && notifications.error === true) {\n      const msg = notifications.msg ? notifications.msg : \"Error\";\n      showToast(\"ERROR\", msg);\n      dispatch(clearSuccessErrorNotification());\n    }\n\n    if (notifications && notifications.success === true) {\n      const msg = notifications.msg ? notifications.msg : \"Done!!!!\";\n      showToast(\"SUCCESS\", msg);\n      dispatch(clearSuccessErrorNotification());\n    }\n  }, [notifications, dispatch]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [props.children, /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MainLayout, \"88B2NZq7afNVAdoB+f4aqkog56M=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = MainLayout;\nexport default MainLayout;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainLayout\");","map":{"version":3,"sources":["/Users/mohammedalmallahi/Development/Server/client/src/ hoc/mainLayout.jsx"],"names":["React","useEffect","useSelector","useDispatch","ToastContainer","showToast","clearSuccessErrorNotification","MainLayout","props","dispatch","notifications","state","entities","error","msg","success","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,cAAT,QAA+B,gBAA/B;AACA,OAAO,uCAAP;AAEA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,6BAAT,QAA8C,wBAA9C;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,aAAa,GAAGR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACC,QAAN,CAAeF,aAA3B,CAAjC;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,aAAa,IAAIA,aAAa,CAACG,KAAd,KAAwB,IAA7C,EAAmD;AACjD,YAAMC,GAAG,GAAGJ,aAAa,CAACI,GAAd,GAAoBJ,aAAa,CAACI,GAAlC,GAAwC,OAApD;AACAT,MAAAA,SAAS,CAAC,OAAD,EAAUS,GAAV,CAAT;AACAL,MAAAA,QAAQ,CAACH,6BAA6B,EAA9B,CAAR;AACD;;AAED,QAAII,aAAa,IAAIA,aAAa,CAACK,OAAd,KAA0B,IAA/C,EAAqD;AACnD,YAAMD,GAAG,GAAGJ,aAAa,CAACI,GAAd,GAAoBJ,aAAa,CAACI,GAAlC,GAAwC,UAApD;AACAT,MAAAA,SAAS,CAAC,SAAD,EAAYS,GAAZ,CAAT;AACAL,MAAAA,QAAQ,CAACH,6BAA6B,EAA9B,CAAR;AACD;AACF,GAZQ,EAYN,CAACI,aAAD,EAAgBD,QAAhB,CAZM,CAAT;AAcA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,eACGD,KAAK,CAACQ,QADT,eAEE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAxBD;;GAAMT,U;UACaJ,W,EACKD,W;;;KAFlBK,U;AA0BN,eAAeA,UAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport { showToast } from \"../ utils/tools\";\nimport { clearSuccessErrorNotification } from \"../store/notifications\";\n\nconst MainLayout = (props) => {\n  const dispatch = useDispatch();\n  const notifications = useSelector((state) => state.entities.notifications);\n\n  useEffect(() => {\n    if (notifications && notifications.error === true) {\n      const msg = notifications.msg ? notifications.msg : \"Error\";\n      showToast(\"ERROR\", msg);\n      dispatch(clearSuccessErrorNotification());\n    }\n\n    if (notifications && notifications.success === true) {\n      const msg = notifications.msg ? notifications.msg : \"Done!!!!\";\n      showToast(\"SUCCESS\", msg);\n      dispatch(clearSuccessErrorNotification());\n    }\n  }, [notifications, dispatch]);\n\n  return (\n    <React.Fragment>\n      {props.children}\n      <ToastContainer />\n    </React.Fragment>\n  );\n};\n\nexport default MainLayout;\n"]},"metadata":{},"sourceType":"module"}