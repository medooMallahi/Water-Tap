{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { apiCallBegan } from \"./api\";\n\nconst initialState = () => ({\n  list: []\n});\n\nconst slice = createSlice({\n  name: \"drivers\",\n  initialState: initialState(),\n  reducers: {\n    driversRecieved: (state, action) => {\n      state.list = action.payload.data;\n    }\n  }\n});\nconst {\n  driversRecieved\n} = slice.actions;\nexport const registerDriver = data => apiCallBegan({\n  url: \"/users/registerDriver\",\n  method: \"post\",\n  data,\n  msgOnSuccess: \"Driver Added\"\n});\nexport const deleteDriver = data => apiCallBegan({\n  url: \"/users/deleteDriver\",\n  method: \"post\",\n  data,\n  msgOnSuccess: \"Driver Deleted successfuly\"\n});\nexport const getDrivers = () => apiCallBegan({\n  url: \"/users/getAllDrivers\",\n  method: \"get\",\n  onSuccess: driversRecieved.type\n});\nexport default slice.reducer;","map":{"version":3,"sources":["/Users/mohammedalmallahi/Development/Server/client/src/store/drivers.js"],"names":["createSlice","apiCallBegan","initialState","list","slice","name","reducers","driversRecieved","state","action","payload","data","actions","registerDriver","url","method","msgOnSuccess","deleteDriver","getDrivers","onSuccess","type","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,YAAT,QAA6B,OAA7B;;AAEA,MAAMC,YAAY,GAAG,OAAO;AAC1BC,EAAAA,IAAI,EAAE;AADoB,CAAP,CAArB;;AAIA,MAAMC,KAAK,GAAGJ,WAAW,CAAC;AACxBK,EAAAA,IAAI,EAAE,SADkB;AAGxBH,EAAAA,YAAY,EAAEA,YAAY,EAHF;AAKxBI,EAAAA,QAAQ,EAAE;AACRC,IAAAA,eAAe,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAClCD,MAAAA,KAAK,CAACL,IAAN,GAAaM,MAAM,CAACC,OAAP,CAAeC,IAA5B;AACD;AAHO;AALc,CAAD,CAAzB;AAYA,MAAM;AAAEJ,EAAAA;AAAF,IAAsBH,KAAK,CAACQ,OAAlC;AAEA,OAAO,MAAMC,cAAc,GAAIF,IAAD,IAC5BV,YAAY,CAAC;AACXa,EAAAA,GAAG,EAAE,uBADM;AAEXC,EAAAA,MAAM,EAAE,MAFG;AAGXJ,EAAAA,IAHW;AAIXK,EAAAA,YAAY,EAAE;AAJH,CAAD,CADP;AAQP,OAAO,MAAMC,YAAY,GAAIN,IAAD,IAC1BV,YAAY,CAAC;AACXa,EAAAA,GAAG,EAAE,qBADM;AAEXC,EAAAA,MAAM,EAAE,MAFG;AAGXJ,EAAAA,IAHW;AAIXK,EAAAA,YAAY,EAAE;AAJH,CAAD,CADP;AAQP,OAAO,MAAME,UAAU,GAAG,MACxBjB,YAAY,CAAC;AACXa,EAAAA,GAAG,EAAE,sBADM;AAEXC,EAAAA,MAAM,EAAE,KAFG;AAGXI,EAAAA,SAAS,EAAEZ,eAAe,CAACa;AAHhB,CAAD,CADP;AAOP,eAAehB,KAAK,CAACiB,OAArB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { apiCallBegan } from \"./api\";\n\nconst initialState = () => ({\n  list: [],\n});\n\nconst slice = createSlice({\n  name: \"drivers\",\n\n  initialState: initialState(),\n\n  reducers: {\n    driversRecieved: (state, action) => {\n      state.list = action.payload.data;\n    },\n  },\n});\n\nconst { driversRecieved } = slice.actions;\n\nexport const registerDriver = (data) =>\n  apiCallBegan({\n    url: \"/users/registerDriver\",\n    method: \"post\",\n    data,\n    msgOnSuccess: \"Driver Added\",\n  });\n\nexport const deleteDriver = (data) =>\n  apiCallBegan({\n    url: \"/users/deleteDriver\",\n    method: \"post\",\n    data,\n    msgOnSuccess: \"Driver Deleted successfuly\",\n  });\n\nexport const getDrivers = () =>\n  apiCallBegan({\n    url: \"/users/getAllDrivers\",\n    method: \"get\",\n    onSuccess: driversRecieved.type,\n  });\n\nexport default slice.reducer;\n"]},"metadata":{},"sourceType":"module"}