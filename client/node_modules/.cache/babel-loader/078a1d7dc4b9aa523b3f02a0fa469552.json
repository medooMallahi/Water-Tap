{"ast":null,"code":"import axios from \"axios\";\nimport * as actions from \"../api\";\nimport { addError, addSuccess } from \"../notifications\";\n\nconst api = ({\n  dispatch\n}) => next => async action => {\n  if (action.type !== actions.apiCallBegan.type) return next(action);\n  const {\n    url,\n    method,\n    data,\n    params,\n    headers,\n    onStart,\n    onSuccess,\n    onError,\n    msgOnSuccess\n  } = action.payload;\n  if (onStart) dispatch({\n    type: onStart\n  });\n  next(action);\n\n  try {\n    const response = await axios.request({\n      baseURL: \"/api\",\n      url,\n      method,\n      data,\n      params,\n      headers\n    }); //general\n\n    dispatch(actions.apiCallSuccess(response.data));\n    if (msgOnSuccess) dispatch(addSuccess(msgOnSuccess)); //specific\n\n    if (onSuccess) dispatch({\n      type: onSuccess,\n      payload: response.data\n    });\n  } catch (error) {\n    //general\n    dispatch(actions.apiCallFailed(error.message));\n    dispatch(addError(error.message)); //specific\n\n    if (onError) dispatch({\n      type: onError,\n      payload: error.message\n    });\n  }\n};\n\nexport default api;","map":{"version":3,"sources":["/Users/mohammedalmallahi/Development/Server/client/src/store/middleware/api.js"],"names":["axios","actions","addError","addSuccess","api","dispatch","next","action","type","apiCallBegan","url","method","data","params","headers","onStart","onSuccess","onError","msgOnSuccess","payload","response","request","baseURL","apiCallSuccess","error","apiCallFailed","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,OAAZ,MAAyB,QAAzB;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,kBAArC;;AAEA,MAAMC,GAAG,GACP,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACCC,IAAD,IACA,MAAOC,MAAP,IAAkB;AAChB,MAAIA,MAAM,CAACC,IAAP,KAAgBP,OAAO,CAACQ,YAAR,CAAqBD,IAAzC,EAA+C,OAAOF,IAAI,CAACC,MAAD,CAAX;AAE/C,QAAM;AACJG,IAAAA,GADI;AAEJC,IAAAA,MAFI;AAGJC,IAAAA,IAHI;AAIJC,IAAAA,MAJI;AAKJC,IAAAA,OALI;AAMJC,IAAAA,OANI;AAOJC,IAAAA,SAPI;AAQJC,IAAAA,OARI;AASJC,IAAAA;AATI,MAUFX,MAAM,CAACY,OAVX;AAYA,MAAIJ,OAAJ,EAAaV,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAEO;AAAR,GAAD,CAAR;AACbT,EAAAA,IAAI,CAACC,MAAD,CAAJ;;AAEA,MAAI;AACF,UAAMa,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,OAAN,CAAc;AACnCC,MAAAA,OAAO,EAAE,MAD0B;AAEnCZ,MAAAA,GAFmC;AAGnCC,MAAAA,MAHmC;AAInCC,MAAAA,IAJmC;AAKnCC,MAAAA,MALmC;AAMnCC,MAAAA;AANmC,KAAd,CAAvB,CADE,CASF;;AACAT,IAAAA,QAAQ,CAACJ,OAAO,CAACsB,cAAR,CAAuBH,QAAQ,CAACR,IAAhC,CAAD,CAAR;AACA,QAAIM,YAAJ,EAAkBb,QAAQ,CAACF,UAAU,CAACe,YAAD,CAAX,CAAR,CAXhB,CAaF;;AACA,QAAIF,SAAJ,EAAeX,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAEQ,SAAR;AAAmBG,MAAAA,OAAO,EAAEC,QAAQ,CAACR;AAArC,KAAD,CAAR;AAChB,GAfD,CAeE,OAAOY,KAAP,EAAc;AACd;AACAnB,IAAAA,QAAQ,CAACJ,OAAO,CAACwB,aAAR,CAAsBD,KAAK,CAACE,OAA5B,CAAD,CAAR;AAEArB,IAAAA,QAAQ,CAACH,QAAQ,CAACsB,KAAK,CAACE,OAAP,CAAT,CAAR,CAJc,CAMd;;AACA,QAAIT,OAAJ,EAAaZ,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAES,OAAR;AAAiBE,MAAAA,OAAO,EAAEK,KAAK,CAACE;AAAhC,KAAD,CAAR;AACd;AACF,CA7CH;;AA+CA,eAAetB,GAAf","sourcesContent":["import axios from \"axios\";\nimport * as actions from \"../api\";\nimport { addError, addSuccess } from \"../notifications\";\n\nconst api =\n  ({ dispatch }) =>\n  (next) =>\n  async (action) => {\n    if (action.type !== actions.apiCallBegan.type) return next(action);\n\n    const {\n      url,\n      method,\n      data,\n      params,\n      headers,\n      onStart,\n      onSuccess,\n      onError,\n      msgOnSuccess,\n    } = action.payload;\n\n    if (onStart) dispatch({ type: onStart });\n    next(action);\n\n    try {\n      const response = await axios.request({\n        baseURL: \"/api\",\n        url,\n        method,\n        data,\n        params,\n        headers,\n      });\n      //general\n      dispatch(actions.apiCallSuccess(response.data));\n      if (msgOnSuccess) dispatch(addSuccess(msgOnSuccess));\n\n      //specific\n      if (onSuccess) dispatch({ type: onSuccess, payload: response.data });\n    } catch (error) {\n      //general\n      dispatch(actions.apiCallFailed(error.message));\n\n      dispatch(addError(error.message));\n\n      //specific\n      if (onError) dispatch({ type: onError, payload: error.message });\n    }\n  };\n\nexport default api;\n"]},"metadata":{},"sourceType":"module"}