{"ast":null,"code":"// import { createSlice } from \"@reduxjs/toolkit\";\n// import { apiCallBegan } from \"./api\";\n// import {\n//   getAuthHeader,\n//   getTokenCookie,\n//   removeTokenCookie,\n// } from \"../utils/tools\";\n// const initialState = () => ({\n//   data: {},\n//   auth: null,\n//   cart: [],\n// });\n// const slice = createSlice({\n//   name: \"user\",\n//   initialState: initialState(),\n//   reducers: {\n//     userAuthenticated: (state, action) => {\n//       state.data = action.payload.user;\n//       state.auth = true;\n//     },\n//     userAuthenticatedFailed: (state, action) => {\n//       state.data = {};\n//       state.auth = false;\n//     },\n//     userprofileeUpdated: (state, action) => {\n//       state.data = action.payload;\n//     },\n//     userAddedToCart: (state, action) => {\n//       state.cart.push(action.payload.item);\n//     },\n//     purchaseSucceded: (state, action) => {\n//       console.log(action.payload, \"Payload\");\n//       state.cart = [];\n//       state.data.history = action.payload;\n//     },\n//     userCleared: (state, action) => initialState(),\n//   },\n// });\n// const {\n//   userAuthenticated,\n//   userCleared,\n//   userAuthenticatedFailed,\n//   userprofileeUpdated,\n//   userAddedToCart,\n//   purchaseSucceded,\n// } = slice.actions;\n// export const registerUser = (data) =>\n//   apiCallBegan({\n//     url: \"/auth/register\",\n//     method: \"post\",\n//     data,\n//     onSuccess: userAuthenticated.type,\n//   });\n// export const loginUser = (data) =>\n//   apiCallBegan({\n//     url: \"/auth/signin\",\n//     method: \"post\",\n//     data,\n//     onSuccess: userAuthenticated.type,\n//   });\n// export const userIsAuth = () => (dispatch) => {\n//   try {\n//     if (!getTokenCookie()) {\n//       throw Error();\n//     }\n//   } catch (err) {\n//     userCleared();\n//   }\n//   dispatch(\n//     apiCallBegan({\n//       url: \"/auth/isauth\",\n//       headers: getAuthHeader(),\n//       onSuccess: userAuthenticated.type,\n//       onError: userAuthenticatedFailed.type,\n//     })\n//   );\n// };\n// export const updateUserProofile = (data) =>\n//   apiCallBegan({\n//     url: \"/users/profile\",\n//     method: \"patch\",\n//     data,\n//     headers: getAuthHeader(),\n//     onSuccess: userprofileeUpdated.type,\n//   });\n// export const updateEmail = (data) =>\n//   apiCallBegan({\n//     url: \"/users/email\",\n//     method: \"patch\",\n//     data,\n//     headers: getAuthHeader(),\n//     onSuccess: userAuthenticated.type,\n//   });\n// export const userSignOut = () => {\n//   removeTokenCookie();\n//   return userCleared();\n// };\n// export const addToCart = (item) => userAddedToCart({ item });\n// export const PurchaseSuccess = (data) => {\n//   return apiCallBegan({\n//     url: \"/transaction/\",\n//     method: \"post\",\n//     data,\n//     headers: getAuthHeader(),\n//     msgOnSuccess: \"Thank you for your purchase\",\n//     onSuccess: purchaseSucceded.type,\n//   });\n// };\n// export default slice.reducer;","map":{"version":3,"sources":["/Users/mohammedalmallahi/Development/Server/client/src/store/user.js"],"names":[],"mappingssourcesContent":["// import { createSlice } from \"@reduxjs/toolkit\";\n// import { apiCallBegan } from \"./api\";\n// import {\n//   getAuthHeader,\n//   getTokenCookie,\n//   removeTokenCookie,\n// } from \"../utils/tools\";\n\n// const initialState = () => ({\n//   data: {},\n//   auth: null,\n//   cart: [],\n// });\n\n// const slice = createSlice({\n//   name: \"user\",\n\n//   initialState: initialState(),\n\n//   reducers: {\n//     userAuthenticated: (state, action) => {\n//       state.data = action.payload.user;\n//       state.auth = true;\n//     },\n//     userAuthenticatedFailed: (state, action) => {\n//       state.data = {};\n//       state.auth = false;\n//     },\n//     userprofileeUpdated: (state, action) => {\n//       state.data = action.payload;\n//     },\n//     userAddedToCart: (state, action) => {\n//       state.cart.push(action.payload.item);\n//     },\n//     purchaseSucceded: (state, action) => {\n//       console.log(action.payload, \"Payload\");\n//       state.cart = [];\n//       state.data.history = action.payload;\n//     },\n//     userCleared: (state, action) => initialState(),\n//   },\n// });\n\n// const {\n//   userAuthenticated,\n//   userCleared,\n//   userAuthenticatedFailed,\n//   userprofileeUpdated,\n//   userAddedToCart,\n//   purchaseSucceded,\n// } = slice.actions;\n\n// export const registerUser = (data) =>\n//   apiCallBegan({\n//     url: \"/auth/register\",\n//     method: \"post\",\n//     data,\n//     onSuccess: userAuthenticated.type,\n//   });\n\n// export const loginUser = (data) =>\n//   apiCallBegan({\n//     url: \"/auth/signin\",\n//     method: \"post\",\n//     data,\n//     onSuccess: userAuthenticated.type,\n//   });\n\n// export const userIsAuth = () => (dispatch) => {\n//   try {\n//     if (!getTokenCookie()) {\n//       throw Error();\n//     }\n//   } catch (err) {\n//     userCleared();\n//   }\n\n//   dispatch(\n//     apiCallBegan({\n//       url: \"/auth/isauth\",\n//       headers: getAuthHeader(),\n//       onSuccess: userAuthenticated.type,\n//       onError: userAuthenticatedFailed.type,\n//     })\n//   );\n// };\n\n// export const updateUserProofile = (data) =>\n//   apiCallBegan({\n//     url: \"/users/profile\",\n//     method: \"patch\",\n//     data,\n//     headers: getAuthHeader(),\n//     onSuccess: userprofileeUpdated.type,\n//   });\n\n// export const updateEmail = (data) =>\n//   apiCallBegan({\n//     url: \"/users/email\",\n//     method: \"patch\",\n//     data,\n//     headers: getAuthHeader(),\n//     onSuccess: userAuthenticated.type,\n//   });\n\n// export const userSignOut = () => {\n//   removeTokenCookie();\n//   return userCleared();\n// };\n\n// export const addToCart = (item) => userAddedToCart({ item });\n\n// export const PurchaseSuccess = (data) => {\n//   return apiCallBegan({\n//     url: \"/transaction/\",\n//     method: \"post\",\n//     data,\n//     headers: getAuthHeader(),\n//     msgOnSuccess: \"Thank you for your purchase\",\n//     onSuccess: purchaseSucceded.type,\n//   });\n// };\n// export default slice.reducer;\n"]},"metadata":{},"sourceType":"module"}